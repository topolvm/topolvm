{{- if or .Values.webhook.podMutatingWebhook.enabled .Values.webhook.pvcMutatingWebhook.enabled }}
{{- if not .Values.webhook.caBundle }}
{{- if not .Values.webhook.existingCertManagerIssuer }}
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ template "topolvm.fullname" . }}-webhook-ca
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "topolvm.labels" . | nindent 4 }}
spec:
  secretName: {{ template "topolvm.fullname" . }}-webhook-ca
  duration: 87600h0m0s # 10y
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: {{ template "topolvm.fullname" . }}-webhook-selfsign
  commonName: ca.webhook.topolvm
  isCA: true
  usages:
    - digital signature
    - key encipherment
    - cert sign
{{- end }}
---
# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ template "topolvm.fullname" . }}-mutatingwebhook
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "topolvm.labels" . | nindent 4 }}
spec:
  secretName: {{ template "topolvm.fullname" . }}-mutatingwebhook
  duration: 8760h0m0s # 1y
  issuerRef:
    {{- with .Values.webhook.existingCertManagerIssuer }}
    {{- toYaml . | nindent 4 -}}
    {{- else }}
    group: cert-manager.io
    kind: Issuer
    name: {{ template "topolvm.fullname" . }}-webhook-ca
    {{- end }}
  dnsNames:
    - {{ template "topolvm.fullname" . }}-controller
    - {{ template "topolvm.fullname" . }}-controller.{{ .Release.Namespace }}
    - {{ template "topolvm.fullname" . }}-controller.{{ .Release.Namespace }}.svc
  usages:
    - digital signature
    - key encipherment
    - server auth
    - client auth
{{- end }}
{{- end }}
